{"version":3,"sources":["Assets/no_poster_available.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Tv/TvPresenter.js","Routes/Tv/index.js","Routes/Tv/TvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upComing","loading","error","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","tvDetail","HomeContainer","state","data","results","this","setState","React","Component","TvPresenter","tv","original_name","first_air_date","istisMoviev","TvContainer","console","log","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","target","searchByTerm","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","BackDrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","isTv","match","push","history","parsedId","Number","isNaN","path","exact","component","Home","Tv","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42ced844.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_poster_available.d7ef1547.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  font-weight: 400;\r\n  margin-top: 22px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      💖 Loading... 💖\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-weight: 600;\r\n`;\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.2s linear;\r\n`;\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.2s linear;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\nconst Year = styled.span`\r\n  color: rgba(255, 255, 255, 0.7);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../Assets/no_poster_available.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            👍\r\n          </span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(0, 20)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.string,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upComing, loading, error }) => (\r\n  <>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Sonflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title=\"UpComing\">\r\n            {upComing.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"e74c3c\" />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"af92860a34c48d149515329665757c38\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"vidoes\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"vidoes\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing }\r\n      } = await movieApi.upComing();\r\n      const {\r\n        data: { results: popular }\r\n      } = await movieApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Sorry! Can't find movies information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TvPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Sonflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated TV Shows\">\r\n            {topRated.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n                istisMoviev={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n                istisMoviev={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n                istisMoviev={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"e74c3c\" />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\n\r\nTvPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TvPresenter;\r\n","import TvContainer from \"./TvContainer\";\r\nexport default TvContainer;\r\n","import React from \"react\";\r\nimport TvPresenter from \"./TvPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Sorry! Can't find TV information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    console.log(topRated, popular, airingToday);\r\n    return (\r\n      <TvPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n  loading,\r\n  error\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Sonfilx</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResult && movieResult.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResult.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResult && tvResult.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResult.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n                istisMoviev={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n        {tvResult &&\r\n          movieResult &&\r\n          tvResult.length === 0 &&\r\n          movieResult.length === 0 && (\r\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResult: PropTypes.array,\r\n  tvResult: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResult: null,\r\n    tvResult: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(event.target);\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResult }\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResult }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResult, tvResult, loading: false });\r\n    } catch {\r\n      this.setState({ error: \"Sorry! Can't find information \" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResult, tvResult, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResult={movieResult}\r\n        tvResult={tvResult}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV Shows</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(5px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.data`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n`;\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\nconst Item = styled.span`\r\n  font-size: 14px;\r\n`;\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\nconst Overview = styled.p`\r\n  opacity: 0.8;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Sonflix\r\n        </title>\r\n      </Helmet>\r\n      <BackDrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/no_poster_available.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? `${genre.name}`\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n      isTv: pathname.includes(\"/tv/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = Number(id);\r\n\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.tvDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Sorry! Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Tv from \"Routes/Tv\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      {/* Switch는 한 번에 오직 하나의 Route만 Render 하게함. */}\r\n      <Route path=\"/\" exact component={Home} />{\" \"}\r\n      {/* exact는 path와 정확할 때 Route로 보내짐 */}\r\n      <Route path=\"/tv\" exact component={Tv} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/tv/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:60px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}